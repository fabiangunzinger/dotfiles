#################################################
# fabmac config
#################################################

export FABIB=~/dev/projects/dotfiles/latex/fabib.bib
export PATH="/usr/local/opt/grep/libexec/gnubin:$PATH"      # use gnu grep
export PATH="/Users/fgu/.local/bin:$PATH"                   # add poetry topath
export EDITOR=nvim
export VISUAL="$EDITOR"

export PATH="/Users/fabian.gunzinger/.local/bin:$PATH"

# prompt
# heavily based on https://youtu.be/LXgXV7YmSiU. colors: 256color_chart.svg
get_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
   
blue=$(tput setaf 033)
green=$(tput setaf 034)
white=$(tput setaf 15)
orange=$(tput setaf 208)
branch_col=$(tput setaf 161)
bold=$(tput bold)
reset=$(tput sgr0)

PROMPT='%F{'
PS1="\[${bold}\]%n";
PS1+="\[${blue}\]\u";           # username
PS1+="\[${white}\]@";
PS1+="\[${orange}\]\h";         # host
PS1+="\[${white}\] in ";
PS1+="\[${green}\]\W";          # basename of working directory
PS1+="\[${branch_col}\]\$(get_git_branch)";
PS1+="\[${reset}\] $ ";
export PS1;


#################################################
# fabmac aliases
#################################################

# git and github
alias ghrc='gh repo create'         # interactively create a new repo
alias ghp='git help'                # ..git verb for which help is needed
alias gs='git status --short'       # cols are staging area and working-tree
alias gsv='git status'              # verbose status
alias gl='git log --oneline -3'     # oneline log
alias glv='git log -3'              # verbose log
alias gd='git diff'                 # .. ref a and b, defaults to wd and idx
alias gds='git diff --staged'       # diff between index and last commit
alias gsw='git show'                # show some object
alias gt='git tag'                  # ..tagname for last commit, dft lists tags

alias ga='git add'                  # .. file to stage (move to index)
alias gaa='git add --all'           # add all modified files to index
alias gap='git add --patch'         # stage individual hunks
alias gc='git commit --verbose'     # show diff in editor
alias gcm='git commit --message'    # commit with inline message
alias gca='gc --all'                # commit all tracked files
alias gcam='gca --message'          # above with inline message
alias gcad='gc --amend'             # add changes to last commit or edit msg
alias gcadn='gcad --no-edit'        # add changes to last commit (keep msg)

alias grm='git rm'                  # ..fn to remove, then stage for commit
alias grmc='git rm --cached'        # ..fn to remove from index but not wd
alias gre='git restore'             # ..fn to revert back to state of last commit
alias gres='git restore --staged'   # ..fn to remove from index
# alias grts='git reset --soft'

alias gsh='git stash'               # save current state of working tree
alias gshl='gsh list'               # list stored stashes
alias gsha='gsh apply'              # ..stash ref (sr) to apply, default is last
alias gshd='gsh drop'               # ..sr to drop, default is last
alias gshp='gs pop'                 # apply and delete (last)
alias gshb='gs branch'              # ..sr to create branch from, dft is last
alias gcn='git clean'               # ..fn to be removed from wd
alias gcnn='gc --dry-run'           # dry run of above

alias gph='git push'                # move remote pointer to match local one 
alias gphu='gph --set-upstream origin' # ..branch name of remote
alias gphd='gph origin --delete'   # ..refs to delete (e.g. branchname)
alias gf='git fetch'                # download new files from remote (no merge)
alias gpl='git pull'                # download and merge new files from remote

alias gb='git branch -vv'           # list branches
alias gbm='gb --merged'             # list bs already merged into current b
alias gbnm='gb --no-merged'         # list bs not yet merged into current b
alias gbme='git branch --move'      # rename by appending <oldname> <newname>
alias gsb='git switch'               # switch to branch (or get from remote)
alias gsc='git switch --create'     # create new branch and switch to it
alias gsp='git switch -'            # switch to previously checked out branch
alias gsm='git switch main'         # switch to main branch
alias gm='git merge'                # merge branch
alias gbd='git branch -d'           # delete branch
alias gbdf='git branch -D'          # force delete branch with uncommited edits

function gacp() { gaa; gcm "$1"; gph; } # add, commit, and push all files

# bash
alias sz='source ~/.zshrc'
alias la='ls -a'
alias ll='ls -oh'
alias lla='ls -aho'
alias lg='lla | grep $1'
alias cpwd='pwd | pbcopy'
alias ..='cd ..'
alias ...='cd ../..'

# system shutdown (also shuts down aws instance) and reboots
alias ss='atesp; sudo shutdown -h now'
alias sr='sudo shutdown -r now'

# start of day
alias jk='open /System/Applications/Calendar.app; open /System/Applications/Notes.app'

# misc. directories
alias dju='cd /Users/fgu/Library/Jupyter/snippets'
alias dic='cd ~/Library/Mobile\ Documents/com~apple~CloudDocs'
alias dfab='dic; cd fab'
alias dre='dfab; cd library/resources'
alias dpa='dfab; cd library/papers'

# open directories
alias ore='dre; open .'
alias opa='dpa; open .'

# conda
alias ci='conda install '
alias cl='conda list'
alias clg='conda list | grep '
alias ce='conda env export > environment.yml'
alias ceh='conda env export --from-history > environment.yml'
function cc() { conda create --name $1; }
function ccb() { conda create --name $1 python=3.9 pandas scipy scikit-learn matplotlib seaborn jupyterlab statsmodels linearmodels jupyterlab_code_formatter black isort s3fs pyarrow; }
function cr() { conda remove --name $1 --all; }
function ccf() { conda env create --file $1; }
function ca() { conda activate "$1"; }
cda='conda deactivate'

# aws
mac_ip=$(curl -s ifconfig.me)
mac_remote=/Users/fgu/dev/remote
vm_remote=/home/fgu/dev/remote
localhost_forward=9999:localhost:9999 

te_keypair=/Users/fgu/.aws/3di.pem
instance_id=i-0d38c6fcdfb909b7b
tail='--region eu-west-2 --profile 3di'

alias get_dns="aws ec2 describe-instances \
    --instance-ids $instance_id \
    --query 'Reservations[*].Instances[*].PublicDnsName' \
    --profile '3di' \
    --region 'eu-west-2' \
    --output 'text'"

## start and stop instance
alias atesp='aws ec2 stop-instances --instance-ids $instance_id $tail'
alias atest='aws ec2 start-instances --instance-ids $instance_id $tail'

## connect to ec2 instances
alias atec='ssh -i $te_keypair fgu@$(get_dns)'
alias atect='ssh -i $te_keypair te@$(get_dns)'
alias atecu='ssh -i $te_keypair -L $localhost_forward ubuntu@$(get_dns)'

## fetch latest fable data
source=s3://fd-eu-rowlevel-v2
destination=s3://3di-data-fable/raw/
alias getfable="aws s3 sync $source $destination --profile '3di'"

## copy files from a to b
function acp() { aws s3 cp $1 $2; }
function acpt() { aws s3 cp $1 $2 --profile '3di'; }


